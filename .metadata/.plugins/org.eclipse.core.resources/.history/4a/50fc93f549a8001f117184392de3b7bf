/*
 * Timer_Driver.h
 *
 *  Created on: Oct 8, 2024
 *      Author: Arjun
 */

#include "stm32f4xx_hal.h"
#include <stdbool.h>

#ifndef TIMER_DRIVER_H_
#define TIMER_DRIVER_H_



#define CLK_FREQ 6250000

#define SEC_IT   2

#define ARR_VAL  ( (SEC_IT * CLK_FREQ) - SET )




void TimerInit(GPTIMR_RegDef_t *timer, GPTimer_Config_t config);
void Timer_ClockControl(GPTIMR_RegDef_t *timer, bool state);
void StartTimer(GPTIMR_RegDef_t *timer);
void StopTimer(GPTIMR_RegDef_t *timer);
void ResetTimer(GPTIMR_RegDef_t *timer);
uint32_t GetTimerValue(GPTIMR_RegDef_t *timer);
void Timer_InterruptControl(GPTIMR_RegDef_t *timer, bool state);
uint32_t GetTimerARV(GPTIMR_RegDef_t *timer);
void Timer_ClearInterruptFlag(GPTIMR_RegDef_t *timer);
void Timer_EnableInterruptBit(GPTIMR_RegDef_t *timer);
bool TimerStopped(GPTIMR_RegDef_t *timer);
void ForceTimerUpdate(GPTIMR_RegDef_t *timer);




#endif /* TIMER_DRIVER_H_ */
